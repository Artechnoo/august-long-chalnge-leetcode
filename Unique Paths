A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?









class Solution(object):
    def uniquePaths(self, m, n):
        dp=[[0 for i in range(n+1)] for j in range(m+1)]
        #for i in range(m):
         #   for j in range(n):
                
        for i in range(m):
            for j in range(n):
                if i==0 and j==0:
                    dp[i][j]=1
                else:
                    dp[i][j]=dp[i-1][j]+dp[i][j-1]
        #print(i,j)
        #print(dp)            
        return (dp[i][j] )
        
        
